name: Run CI/CD on Main Branch

on:
  push:
    branches: [main]

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Build and start all Docker services
        run: |
          docker compose up -d --build --wait

      - name: List files in frontend container
        run: |
          docker compose exec -T cancer-frontend ls /app || true

      - name: Run tests in backend container
        run: |
          docker compose exec -T cancer-backend pytest

  cd:
    needs: ci
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Copy files to EC2
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          source: "."
          target: "~/app"

      - name: Install Docker on EC2 (if missing)
        uses: appleboy/ssh-action@v1.0.1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            if ! command -v docker >/dev/null 2>&1; then
              curl -fsSL https://get.docker.com | sh
              sudo apt-get install -y docker-compose-plugin
              sudo usermod -aG docker $USER
            else
              echo "Docker already installed"
            fi

      - name: Deploy and start Docker containers on EC2
        uses: appleboy/ssh-action@v1.0.1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            cd ~/app
            docker compose down || true
            docker compose up -d --build --wait
