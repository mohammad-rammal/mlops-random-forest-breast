name: Run CI/CD on Main Branch

on:
  push:
    branches: [main]

jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout (Copying) repository
        uses: actions/checkout@v4

      - name: Build and Start Docker Services
        run: |
          docker compose --profile job up -d --build --wait

      - name: List Files in Frontend Container
        run: |
          docker compose exec -T frontend ls

      - name: Run the tests
        run: |
          docker compose exec -T backend pytest

  cd:
    needs: ci
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout (Copying) repository
        uses: actions/checkout@v4

      - name: Copying Files to EC2
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          source: "."
          target: "~/app"

      - name: Install Docker
        uses: appleboy/ssh-action@v1.0.1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            if ! command -v docker >/dev/null 2>&1; then
              curl -fsSL https://get.docker.com | sudo sh
              sudo apt-get install -y docker-compose-plugin
              sudo usermod -aG docker $USER
            else
              echo "âœ… Docker already installed"
            fi

      - name: Run Containers on EC2
        uses: appleboy/ssh-action@v1.0.1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            set -e
            cd ~/app

            echo "ðŸ”„ Cleaning Docker cache..."
            docker system prune -a -f --volumes || true
            sudo apt-get clean

            echo "ðŸ’¾ Setting up 2GB swap (if not already present)..."
            if ! swapon --show | grep -q '/swapfile'; then
              sudo fallocate -l 2G /swapfile
              sudo chmod 600 /swapfile
              sudo mkswap /swapfile
              sudo swapon /swapfile
              echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab
            else
              echo "ðŸŒ€ Swap already exists"
            fi

            echo "ðŸ“¦ Deploying containers..."
            docker compose --profile job down || true
            docker compose --profile job up -d --build
